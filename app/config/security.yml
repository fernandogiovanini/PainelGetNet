# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        PainelGetNet\AppBundle\Entity\User: sha512

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    #providers:
    #    in_memory:
    #        memory:
    #            users:
    #                user:  { password: userpass, roles: [ 'ROLE_USER' ] }
    #                admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    providers:
        fos_userbundle:
            id: fos_user.user_manager

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
            # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js|fonts)/
            security: false
        # the login page has to be accessible for everybody
        #demo_login:
        #    pattern:  ^/demo/secured/login$
        #    security: false

        # secures part of the application
        #demo_secured_area:
        #    pattern:    ^/demo/secured/
        #    # it's important to notice that in this case _demo_security_check and _demo_login
        #    # are route names and that they are specified in the AcmeDemoBundle
        #    form_login:
        #        check_path: _demo_security_check
        #        login_path: _demo_login
        #    logout:
        #        path:   _demo_logout
        #        target: _demo
        #    #anonymous: ~
        #    #http_basic:
        #    #    realm: "Secured Demo Area"
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                use_referer:    true
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:          true

        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                use_referer:    true
            logout:
                path:           /logout
                target:         /login
            anonymous:          true

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    #access_control:
    #    #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: ROLE_USER }

